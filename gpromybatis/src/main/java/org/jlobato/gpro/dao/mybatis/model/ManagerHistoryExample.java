package org.jlobato.gpro.dao.mybatis.model;

import java.util.ArrayList;
import java.util.List;

public class ManagerHistoryExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table manager_history
     *
     * @mbg.generated Sat May 11 19:47:05 CEST 2019
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table manager_history
     *
     * @mbg.generated Sat May 11 19:47:05 CEST 2019
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table manager_history
     *
     * @mbg.generated Sat May 11 19:47:05 CEST 2019
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table manager_history
     *
     * @mbg.generated Sat May 11 19:47:05 CEST 2019
     */
    public ManagerHistoryExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table manager_history
     *
     * @mbg.generated Sat May 11 19:47:05 CEST 2019
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table manager_history
     *
     * @mbg.generated Sat May 11 19:47:05 CEST 2019
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table manager_history
     *
     * @mbg.generated Sat May 11 19:47:05 CEST 2019
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table manager_history
     *
     * @mbg.generated Sat May 11 19:47:05 CEST 2019
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table manager_history
     *
     * @mbg.generated Sat May 11 19:47:05 CEST 2019
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table manager_history
     *
     * @mbg.generated Sat May 11 19:47:05 CEST 2019
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table manager_history
     *
     * @mbg.generated Sat May 11 19:47:05 CEST 2019
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table manager_history
     *
     * @mbg.generated Sat May 11 19:47:05 CEST 2019
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table manager_history
     *
     * @mbg.generated Sat May 11 19:47:05 CEST 2019
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table manager_history
     *
     * @mbg.generated Sat May 11 19:47:05 CEST 2019
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table manager_history
     *
     * @mbg.generated Sat May 11 19:47:05 CEST 2019
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andIdManagerHistoryIsNull() {
            addCriterion("id_manager_history is null");
            return (Criteria) this;
        }

        public Criteria andIdManagerHistoryIsNotNull() {
            addCriterion("id_manager_history is not null");
            return (Criteria) this;
        }

        public Criteria andIdManagerHistoryEqualTo(Integer value) {
            addCriterion("id_manager_history =", value, "idManagerHistory");
            return (Criteria) this;
        }

        public Criteria andIdManagerHistoryNotEqualTo(Integer value) {
            addCriterion("id_manager_history <>", value, "idManagerHistory");
            return (Criteria) this;
        }

        public Criteria andIdManagerHistoryGreaterThan(Integer value) {
            addCriterion("id_manager_history >", value, "idManagerHistory");
            return (Criteria) this;
        }

        public Criteria andIdManagerHistoryGreaterThanOrEqualTo(Integer value) {
            addCriterion("id_manager_history >=", value, "idManagerHistory");
            return (Criteria) this;
        }

        public Criteria andIdManagerHistoryLessThan(Integer value) {
            addCriterion("id_manager_history <", value, "idManagerHistory");
            return (Criteria) this;
        }

        public Criteria andIdManagerHistoryLessThanOrEqualTo(Integer value) {
            addCriterion("id_manager_history <=", value, "idManagerHistory");
            return (Criteria) this;
        }

        public Criteria andIdManagerHistoryIn(List<Integer> values) {
            addCriterion("id_manager_history in", values, "idManagerHistory");
            return (Criteria) this;
        }

        public Criteria andIdManagerHistoryNotIn(List<Integer> values) {
            addCriterion("id_manager_history not in", values, "idManagerHistory");
            return (Criteria) this;
        }

        public Criteria andIdManagerHistoryBetween(Integer value1, Integer value2) {
            addCriterion("id_manager_history between", value1, value2, "idManagerHistory");
            return (Criteria) this;
        }

        public Criteria andIdManagerHistoryNotBetween(Integer value1, Integer value2) {
            addCriterion("id_manager_history not between", value1, value2, "idManagerHistory");
            return (Criteria) this;
        }

        public Criteria andIdManagerIsNull() {
            addCriterion("id_manager is null");
            return (Criteria) this;
        }

        public Criteria andIdManagerIsNotNull() {
            addCriterion("id_manager is not null");
            return (Criteria) this;
        }

        public Criteria andIdManagerEqualTo(Short value) {
            addCriterion("id_manager =", value, "idManager");
            return (Criteria) this;
        }

        public Criteria andIdManagerNotEqualTo(Short value) {
            addCriterion("id_manager <>", value, "idManager");
            return (Criteria) this;
        }

        public Criteria andIdManagerGreaterThan(Short value) {
            addCriterion("id_manager >", value, "idManager");
            return (Criteria) this;
        }

        public Criteria andIdManagerGreaterThanOrEqualTo(Short value) {
            addCriterion("id_manager >=", value, "idManager");
            return (Criteria) this;
        }

        public Criteria andIdManagerLessThan(Short value) {
            addCriterion("id_manager <", value, "idManager");
            return (Criteria) this;
        }

        public Criteria andIdManagerLessThanOrEqualTo(Short value) {
            addCriterion("id_manager <=", value, "idManager");
            return (Criteria) this;
        }

        public Criteria andIdManagerIn(List<Short> values) {
            addCriterion("id_manager in", values, "idManager");
            return (Criteria) this;
        }

        public Criteria andIdManagerNotIn(List<Short> values) {
            addCriterion("id_manager not in", values, "idManager");
            return (Criteria) this;
        }

        public Criteria andIdManagerBetween(Short value1, Short value2) {
            addCriterion("id_manager between", value1, value2, "idManager");
            return (Criteria) this;
        }

        public Criteria andIdManagerNotBetween(Short value1, Short value2) {
            addCriterion("id_manager not between", value1, value2, "idManager");
            return (Criteria) this;
        }

        public Criteria andIdSeasonIsNull() {
            addCriterion("id_season is null");
            return (Criteria) this;
        }

        public Criteria andIdSeasonIsNotNull() {
            addCriterion("id_season is not null");
            return (Criteria) this;
        }

        public Criteria andIdSeasonEqualTo(Short value) {
            addCriterion("id_season =", value, "idSeason");
            return (Criteria) this;
        }

        public Criteria andIdSeasonNotEqualTo(Short value) {
            addCriterion("id_season <>", value, "idSeason");
            return (Criteria) this;
        }

        public Criteria andIdSeasonGreaterThan(Short value) {
            addCriterion("id_season >", value, "idSeason");
            return (Criteria) this;
        }

        public Criteria andIdSeasonGreaterThanOrEqualTo(Short value) {
            addCriterion("id_season >=", value, "idSeason");
            return (Criteria) this;
        }

        public Criteria andIdSeasonLessThan(Short value) {
            addCriterion("id_season <", value, "idSeason");
            return (Criteria) this;
        }

        public Criteria andIdSeasonLessThanOrEqualTo(Short value) {
            addCriterion("id_season <=", value, "idSeason");
            return (Criteria) this;
        }

        public Criteria andIdSeasonIn(List<Short> values) {
            addCriterion("id_season in", values, "idSeason");
            return (Criteria) this;
        }

        public Criteria andIdSeasonNotIn(List<Short> values) {
            addCriterion("id_season not in", values, "idSeason");
            return (Criteria) this;
        }

        public Criteria andIdSeasonBetween(Short value1, Short value2) {
            addCriterion("id_season between", value1, value2, "idSeason");
            return (Criteria) this;
        }

        public Criteria andIdSeasonNotBetween(Short value1, Short value2) {
            addCriterion("id_season not between", value1, value2, "idSeason");
            return (Criteria) this;
        }

        public Criteria andIdCategoryIsNull() {
            addCriterion("id_category is null");
            return (Criteria) this;
        }

        public Criteria andIdCategoryIsNotNull() {
            addCriterion("id_category is not null");
            return (Criteria) this;
        }

        public Criteria andIdCategoryEqualTo(Short value) {
            addCriterion("id_category =", value, "idCategory");
            return (Criteria) this;
        }

        public Criteria andIdCategoryNotEqualTo(Short value) {
            addCriterion("id_category <>", value, "idCategory");
            return (Criteria) this;
        }

        public Criteria andIdCategoryGreaterThan(Short value) {
            addCriterion("id_category >", value, "idCategory");
            return (Criteria) this;
        }

        public Criteria andIdCategoryGreaterThanOrEqualTo(Short value) {
            addCriterion("id_category >=", value, "idCategory");
            return (Criteria) this;
        }

        public Criteria andIdCategoryLessThan(Short value) {
            addCriterion("id_category <", value, "idCategory");
            return (Criteria) this;
        }

        public Criteria andIdCategoryLessThanOrEqualTo(Short value) {
            addCriterion("id_category <=", value, "idCategory");
            return (Criteria) this;
        }

        public Criteria andIdCategoryIn(List<Short> values) {
            addCriterion("id_category in", values, "idCategory");
            return (Criteria) this;
        }

        public Criteria andIdCategoryNotIn(List<Short> values) {
            addCriterion("id_category not in", values, "idCategory");
            return (Criteria) this;
        }

        public Criteria andIdCategoryBetween(Short value1, Short value2) {
            addCriterion("id_category between", value1, value2, "idCategory");
            return (Criteria) this;
        }

        public Criteria andIdCategoryNotBetween(Short value1, Short value2) {
            addCriterion("id_category not between", value1, value2, "idCategory");
            return (Criteria) this;
        }

        public Criteria andIdGroupIsNull() {
            addCriterion("id_group is null");
            return (Criteria) this;
        }

        public Criteria andIdGroupIsNotNull() {
            addCriterion("id_group is not null");
            return (Criteria) this;
        }

        public Criteria andIdGroupEqualTo(Short value) {
            addCriterion("id_group =", value, "idGroup");
            return (Criteria) this;
        }

        public Criteria andIdGroupNotEqualTo(Short value) {
            addCriterion("id_group <>", value, "idGroup");
            return (Criteria) this;
        }

        public Criteria andIdGroupGreaterThan(Short value) {
            addCriterion("id_group >", value, "idGroup");
            return (Criteria) this;
        }

        public Criteria andIdGroupGreaterThanOrEqualTo(Short value) {
            addCriterion("id_group >=", value, "idGroup");
            return (Criteria) this;
        }

        public Criteria andIdGroupLessThan(Short value) {
            addCriterion("id_group <", value, "idGroup");
            return (Criteria) this;
        }

        public Criteria andIdGroupLessThanOrEqualTo(Short value) {
            addCriterion("id_group <=", value, "idGroup");
            return (Criteria) this;
        }

        public Criteria andIdGroupIn(List<Short> values) {
            addCriterion("id_group in", values, "idGroup");
            return (Criteria) this;
        }

        public Criteria andIdGroupNotIn(List<Short> values) {
            addCriterion("id_group not in", values, "idGroup");
            return (Criteria) this;
        }

        public Criteria andIdGroupBetween(Short value1, Short value2) {
            addCriterion("id_group between", value1, value2, "idGroup");
            return (Criteria) this;
        }

        public Criteria andIdGroupNotBetween(Short value1, Short value2) {
            addCriterion("id_group not between", value1, value2, "idGroup");
            return (Criteria) this;
        }

        public Criteria andIdTyreBrandIsNull() {
            addCriterion("id_tyre_brand is null");
            return (Criteria) this;
        }

        public Criteria andIdTyreBrandIsNotNull() {
            addCriterion("id_tyre_brand is not null");
            return (Criteria) this;
        }

        public Criteria andIdTyreBrandEqualTo(Short value) {
            addCriterion("id_tyre_brand =", value, "idTyreBrand");
            return (Criteria) this;
        }

        public Criteria andIdTyreBrandNotEqualTo(Short value) {
            addCriterion("id_tyre_brand <>", value, "idTyreBrand");
            return (Criteria) this;
        }

        public Criteria andIdTyreBrandGreaterThan(Short value) {
            addCriterion("id_tyre_brand >", value, "idTyreBrand");
            return (Criteria) this;
        }

        public Criteria andIdTyreBrandGreaterThanOrEqualTo(Short value) {
            addCriterion("id_tyre_brand >=", value, "idTyreBrand");
            return (Criteria) this;
        }

        public Criteria andIdTyreBrandLessThan(Short value) {
            addCriterion("id_tyre_brand <", value, "idTyreBrand");
            return (Criteria) this;
        }

        public Criteria andIdTyreBrandLessThanOrEqualTo(Short value) {
            addCriterion("id_tyre_brand <=", value, "idTyreBrand");
            return (Criteria) this;
        }

        public Criteria andIdTyreBrandIn(List<Short> values) {
            addCriterion("id_tyre_brand in", values, "idTyreBrand");
            return (Criteria) this;
        }

        public Criteria andIdTyreBrandNotIn(List<Short> values) {
            addCriterion("id_tyre_brand not in", values, "idTyreBrand");
            return (Criteria) this;
        }

        public Criteria andIdTyreBrandBetween(Short value1, Short value2) {
            addCriterion("id_tyre_brand between", value1, value2, "idTyreBrand");
            return (Criteria) this;
        }

        public Criteria andIdTyreBrandNotBetween(Short value1, Short value2) {
            addCriterion("id_tyre_brand not between", value1, value2, "idTyreBrand");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table manager_history
     *
     * @mbg.generated do_not_delete_during_merge Sat May 11 19:47:05 CEST 2019
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table manager_history
     *
     * @mbg.generated Sat May 11 19:47:05 CEST 2019
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}